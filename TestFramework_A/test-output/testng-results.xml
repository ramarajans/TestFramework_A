<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-02-19T13:27:39 IST" name="Platform Suite" finished-at="2021-02-19T13:29:09 IST" duration-ms="89446">
    <groups>
    </groups>
    <test started-at="2021-02-19T13:27:39 IST" name="Glass Lewis" finished-at="2021-02-19T13:29:09 IST" duration-ms="89446">
      <class name="tests.VerifyCountryFilterTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:27:39 IST" name="beforeSuite" finished-at="2021-02-19T13:27:39 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:27:40 IST" name="beforeMethod" finished-at="2021-02-19T13:27:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCountryFilterTest(java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:27:40 IST" name="verifyCountryFilterTest" data-provider="data" finished-at="2021-02-19T13:28:05 IST" duration-ms="24918" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BelgiumTest]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//label[text()='BelgiumTest']//parent::div"}
  (Session info: chrome=88.0.4324.182)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'W-7FM3M13', ip: '192.168.0.105', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 88.0.4324.182, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\Users\I341067\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59882}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 310dc1313210378d3e7c21847ce68181
*** Element info: {Using=xpath, value=//label[text()='BelgiumTest']//parent::div}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//label[text()='BelgiumTest']//parent::div"}
  (Session info: chrome=88.0.4324.182)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'W-7FM3M13', ip: '192.168.0.105', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 88.0.4324.182, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\Users\I341067\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59882}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 310dc1313210378d3e7c21847ce68181
*** Element info: {Using=xpath, value=//label[text()='BelgiumTest']//parent::div}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at pages.VerifyCountryFilterPage.selectcountryCheckbox(VerifyCountryFilterPage.java:63)
at tests.VerifyCountryFilterTest.verifyCountryFilterTest(VerifyCountryFilterTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCountryFilterTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:28:06 IST" name="afterMethod" finished-at="2021-02-19T13:28:07 IST" duration-ms="1123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:28:07 IST" name="beforeMethod" finished-at="2021-02-19T13:28:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCountryFilterTest(java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:28:07 IST" name="verifyCountryFilterTest" data-provider="data" finished-at="2021-02-19T13:28:36 IST" duration-ms="29308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCountryFilterTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:28:36 IST" name="afterMethod" finished-at="2021-02-19T13:28:41 IST" duration-ms="4641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:28:41 IST" name="beforeMethod" finished-at="2021-02-19T13:28:41 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCountryFilterTest(java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:28:41 IST" name="verifyCountryFilterTest" data-provider="data" finished-at="2021-02-19T13:29:08 IST" duration-ms="26527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome-headless]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCountryFilterTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:29:08 IST" name="afterMethod" finished-at="2021-02-19T13:29:09 IST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VerifyCountryFilterTest@53976f5c]" started-at="2021-02-19T13:29:09 IST" name="afterSuite" finished-at="2021-02-19T13:29:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VerifyCountryFilterTest -->
    </test> <!-- Glass Lewis -->
  </suite> <!-- Platform Suite -->
</testng-results>
